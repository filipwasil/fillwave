# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: ubuntu
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
    steps:
        #- validate-wercker-box
        # Execute a custom script step.
        - script:
            name: build
            code: |
                lsb_release -a
		#echo "deb http://ppa.launchpad.net/keithw/glfw3/ubuntu trusty main" | sudo tee -a /etc/apt/sources.list.d/fillwave_ext.list
                #echo "deb-src http://ppa.launchpad.net/keithw/glfw3/ubuntu trusty main" | sudo tee -a /etc/apt/sources.list.d/fillwave_ext.list
                #echo "deb http://cz.archive.ubuntu.com/ubuntu trusty main universe" | sudo tee -a /etc/apt/sources.list.d/fillwave_ext.list
                #echo "deb http://cz.archive.ubuntu.com/ubuntu trusty main" | sudo tee -a /etc/apt/sources.list.d/fillwave_ext.list
                #echo "deb-src http://cz.archive.ubuntu.com/ubuntu trusty main " | sudo tee -a /etc/apt/sources.list.d/fillwave_ext.list
                sudo apt-get update
                sudo apt-get install git wget make g++ libglfw3v5 libglfw3-dev libglew1.10 libglew-dev libassimp3 libassimp-dev libfreetype6 libfreetype6-dev libglm-dev libx11-dev libglm-dev -y --force-yes
                git clone https://github.com/Kitware/CMake.git
                cd CMake
                chmod +x ./bootstrap
                ./bootstrap && make && sudo make install
                cd ..
                git clone https://github.com/filipwasil/fillwave.git
                cd fillwave
                git submodule init
                git submodule update
                mkdir ../build
                cd ../build
                cmake ../fillwave -DFILLWAVE_COMPILATION_SUPPRESS_WARNINGS=OFF -DNDEBUG=OFF -DFILLWAVE_BUILD_RPM=OFF -DFILLWAVE_BUILD_DEB=ON -DFILLWAVE_BUILD_DEV=OFF
                make -j4
                mkdir ../build_android
                cd ..
                wget http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin
                chmod +x android-ndk-r10e-linux-x86_64.bin
                ./android-ndk-r10e-linux-x86_64.bin > log.txt
                cd build_android
                cmake ../fillwave -G"Eclipse CDT4 - Unix Makefiles" -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DNDEBUG=OFF -D_ECLIPSE_VERSION="4.4" -DCMAKE_TOOLCHAIN_FILE=../fillwave/ext/android-cmake/android.toolchain.cmake -DANDROID_NDK=../android-ndk-r10e -DCMAKE_BUILD_TYPE=Release -DANDROID_ABI="armeabi-v7a with NEON" -DANDROID_NATIVE_API_LEVEL=18
                make -j4
                
