set(FILLWAVE_EXT_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/ext)
set(FILLWAVE_EXT_GLM_INCLUDES ${FILLWAVE_EXT_INCLUDES}/glm)
set(FILLWAVE_EXT_FREETYPE2_INCLUDES ${FILLWAVE_EXT_INCLUDES}/freetype2/include )
set(FILLWAVE_EXT_FREETYPE2_PATH ${FILLWAVE_EXT_INCLUDES}/freetype2 )
set(FILLWAVE_EXT_FONTGENERATOR_INCLUDES ${FILLWAVE_EXT_INCLUDES}/fontgenerator)
set(FILLWAVE_EXT_FONTGENERATOR_PATH ${FILLWAVE_EXT_INCLUDES}/fontgenerator)
set(FILLWAVE_EXT_FONTGENERATOR_HEADERS ${FILLWAVE_EXT_FONTGENERATOR_INCLUDES}/fontGenerator.h)
set(FILLWAVE_EXT_GLEW_PATH ${FILLWAVE_EXT_INCLUDES}/glew)
set(FILLWAVE_EXT_GLEW_INCLUDES ${FILLWAVE_EXT_INCLUDES}/glew/include)
set(FILLWAVE_EXT_GLFW_PATH ${FILLWAVE_EXT_INCLUDES}/glfw)

set(FILLWAVE_LOADER_PATH ${CMAKE_CURRENT_SOURCE_DIR}/src/loaders)

if(FILLWAVE_MODEL_LOADER_ASSIMP)
	set(FILLWAVE_MODEL_LOADER assimp)
	set(FILLWAVE_MODEL_LOADER_INCLUDES  ${FILLWAVE_EXT_INCLUDES}/assimp/include)
	set(FILLWAVE_MODEL_LOADER_PATH  ${FILLWAVE_EXT_INCLUDES}/assimp)
else()
	set(FILLWAVE_MODEL_LOADER tinyobjloader)
	set(FILLWAVE_MODEL_LOADER_INCLUDES ${FILLWAVE_EXT_INCLUDES}/tinyobjloader)
	set(FILLWAVE_MODEL_LOADER_PATH ${FILLWAVE_EXT_INCLUDES}/tinyobjloader)
	add_subdirectory(${FILLWAVE_MODEL_LOADER_PATH})
endif()

set(FILLWAVE_TEXTURE_WRITER_INCLUDES ${FILLWAVE_EXT_INCLUDES}/stb)

set(FILLWAVE_TEXTURE_LOADER textureloader)
if(FILLWAVE_TEXTURE_LOADER_GLI)
	set(FILLWAVE_TEXTURE_LOADER_INCLUDES ${FILLWAVE_EXT_INCLUDES}/gli)
endif()

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/src/loaders/TextureLoader)

if( CMAKE_SIZEOF_VOID_P EQUAL 4 )
    set( FILLWAVE_GLEW_BUILD glew32 )
elseif( CMAKE_SIZEOF_VOID_P EQUAL 8 )
    set( FILLWAVE_GLEW_BUILD glew64 )
else()
    message( FATAL_ERROR "Data width could not be determined!" )
endif()
